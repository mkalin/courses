     1	#include <stdio.h>
     2	#include <limits.h>
     3	
     4	void print_per(unsigned char);
     5	
     6	void show_bytesBE(char* msg, unsigned char* ptr, int how_many) {
     7	  printf("%s ==> ", msg);
     8	  int i;
     9	  for (i = how_many - 1; i >= 0; i--) printf(" %.2x", ptr[i]);
    10	  printf("\n");
    11	}
    12	
    13	void mystery(int* p1, int* p2) {
    14	  *p1 = *p1 + *p2;
    15	  *p2 = *p1 - *p2;
    16	  *p1 = *p1 - *p2;
    17	}
    18	
    19	int main() {
    20	  int n = 2, m = 7; mystery(&n, &m);
    21	  float f = 0.0;                /*  0.0:   00 00 00 00 */
    22	  f = -f;                       /*   -f:   80 00 00 00 */
    23	  f = 129.1;                    /* 43 01 19 9a */
    24	  f = (float) (((int) f) << 1); /* 43 81 00 00 */
    25	  printf("%f\n", f);            /* 258.0 */
    26	
    27	  int k = 0xabcdef12;         /* k: ab cd ef 12 */
    28	  show_bytesBE("k:", (unsigned char*) &k, sizeof(int));
    29	
    30	  short* ptr;   /* sizeof(short) == 2, sizeof(int) == 4 */
    31	  ptr = (short*) &k;
    32	
    33	  short t = *ptr;
    34	  show_bytesBE("t:", (unsigned char*) &t, sizeof(short)); /* ? */
    35	
    36	  *ptr = *(ptr + 1);
    37	  *(ptr + 1) = t;
    38	
    39	  show_bytesBE("k:", (unsigned char*) &k, sizeof(int));   /* ? */
    40	
    41	  unsigned char r   = 1;
    42	  unsigned char w   = 2;
    43	  unsigned char rw  = r | w;
    44	  unsigned char e   = 4;
    45	  unsigned char rwe = rw | e;
    46	
    47	  printf("r == %i\nw == %i\nrw == %i\ne == %i\nrwe == %i\n",
    48		 r, w, rw, e, rwe);
    49	  int i;
    50	  for (i = 0; i < 10; i++)
    51	    print_per(i);
    52	
    53	  /* little more at the bit level */
    54	  unsigned char big = UCHAR_MAX; /* ff ==> 11111111 */
    55	  signed char small = SCHAR_MIN; /* 80 ==> 10000000 */
    56	
    57	  show_bytesBE("big:", &big, 
    58		       sizeof(char ));         /* ff ==> 11111111 */
    59	
    60	  show_bytesBE("small:", (unsigned char*) 
    61		       &small, sizeof(char));  /* 80 ==> 10000000 */
    62	
    63	  unsigned char xor = big ^ small;/* 7f ==> 01111111 */
    64	  show_bytesBE("xor:", &xor, 
    65		       sizeof(char));          /* 7f ==> 01111111 */
    66	
    67	  unsigned char or = big | small;/* ff ==> 11111111 */
    68	  show_bytesBE("or:", &or, 
    69		       sizeof(char));          /* ff ==> 11111111 */
    70	
    71	  printf("sizeof double is %d\n", sizeof(double)); /* 8 */
    72	  
    73	  return 0;
    74	}
    75	
    76	void print_per(unsigned char n) {
    77	  switch (n) {
    78	  case 1: printf("1 ==> Read\n"); break;
    79	  case 2: printf("2 ==> Write\n"); break;
    80	  case 3: printf("3 ==> Read/write\n"); break;
    81	  case 4: printf("4 ==> Execute\n"); break;
    82	  case 7: printf("7 ==> Read/write/execute\n"); break;
    83	  default: printf("%i ==> No such permission.\n", n);
    84	  }
    85	}
